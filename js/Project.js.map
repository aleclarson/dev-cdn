{
  "version": 3,
  "file": "Project.js",
  "sourceRoot": "..",
  "sources": [
    "src/Project.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "Bucket = require './Bucket'\nhuey = require 'huey'\npath = require 'path'\napp = require './app'\nlog = require './log'\nfs = require './fs'\nvm = require 'vm'\n\n# Projects describe their assets with this class.\nclass Project\n  constructor: (root) ->\n    @root = root\n    @exts = []\n    @bundles = Object.create null\n    @\n\n  init: (opts) ->\n    if opts.exts\n      @exts.push ...opts.exts\n      return\n\n  bundle: (name, opts = {}) ->\n    if @bundles[name]\n      throw Error \"Bundle named '#{name}' already exists\"\n\n    @bundles[name] = opts\n    @exts.push path.extname name\n    return\n\n  bucket: (opts) ->\n    {name, root} = opts\n\n    name ?= path.basename @root\n    bucket = app.buckets[name]\n\n    if typeof root is 'string'\n\n      if !path.isAbsolute root\n        root = path.resolve @root, root\n\n      if !bucket\n        bucket = new Bucket {name, root}\n        app.buckets[name] = bucket\n\n      else if bucket.root isnt root\n        throw Error \"\"\"\n          Bucket name '#{name}' is already used by:\n            #{bucket.root}\n        \"\"\"\n\n    else if root?\n      throw TypeError '`root` must be a string'\n\n    else if !bucket\n      throw Error 'Bucket does not exist: ' + name\n\n    @buckets ?= new Set\n    @buckets.add bucket\n    return\n\n  match: (glob) ->\n\n    if typeof glob is 'string'\n      # TODO: Support globbing.\n      throw Error 'Not implemented yet'\n\n    if typeof glob is 'function'\n      # TODO: Filter functions\n      throw Error 'Not implemented yet'\n\n    if Array.isArray glob\n      glob.forEach @match.bind this\n      return\n\n    throw TypeError 'Expected a string, function, or array'\n\n  @load: (root) ->\n    loadPath = root + '/project.js'\n    unless fs.exists loadPath\n      loadPath = root + '/project.coffee'\n      if fs.exists loadPath\n        coffee = true\n      else return false\n\n    load = fs.readFile loadPath\n    if coffee\n      try coffee = require 'coffeescript'\n      catch err\n        log.yellow 'warn:', \"\"\"\n          You must do #{huey.cyan 'npm install -g coffeescript'} \\\n          before any 'project.coffee' files can be loaded!\n        \"\"\"\n        return false\n\n      load = coffee.compile load,\n        bare: true\n        filename: loadPath\n        sourceMap: false\n\n    project = new Project root\n    vm.runInNewContext load, {project},\n      filename: path\n      displayErrors: true\n      timeout: 10000 # 10s\n\n    return project\n\nmodule.exports = Project\n\n# Assets can be mutated with this class.\nclass AssetStream\n  constructor: (stream) ->\n    @_stream = stream\n    @\n\n  transform: (fn) ->\n    throw Error 'Not implemented yet'\n\n  filter: (fn) ->\n    throw Error 'Not implemented yet'\n\n  concat: ->\n    throw Error 'Not implemented yet'\n\n  toArray: ->\n    throw Error 'Not implemented yet'\n"
  ]
}