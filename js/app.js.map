{
  "version": 3,
  "file": "app.js",
  "sourceRoot": "..",
  "sources": [
    "src/app.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "globRegex = require 'glob-regex'\n{Bundler} = require 'cara'\nslush = require 'slush'\nsteal = require 'steal'\nhuey = require 'huey'\nnoop = require 'noop'\npath = require 'path'\nlog = require './log'\nfs = require './fs'\nos = require 'os'\n\nSOCK_PATH = os.homedir() + '/.cara/cdn.sock'\n\nclass App\n\n  start: ->\n    @server = slush {sock: SOCK_PATH}\n    @bundler = new Bundler\n    @buckets = {}\n    @projects = {}\n\n    @bundler.on 'warn', (msg) ->\n      log.yellow 'warn:', msg\n\n    @bundler.on 'error', onError\n    @server.on 'error', onError\n    return @server\n\n  stop: ->\n    if log.verbose\n      log.pale_pink 'Closing asset server...'\n    fs.removeFile SOCK_PATH, false\n    @server.close()\n    @server = null\n    @bundler = null\n    @buckets = null\n    @projects = null\n    return\n\n  read: (req, res) ->\n    return project.read req, res if req.project\n    for root, project of req.bucket.projects\n      val = project.read req, res\n      return val if val isnt false\n\n  add: (root) ->\n    if @projects.hasOwnProperty root\n      throw Error 'Already loaded: ' + root\n\n    if log.verbose\n      log.pale_yellow 'Loading project:', root\n\n    # TODO: Watch project file for changes.\n    config = Project.load root\n    project = @bundler.project\n      root: config.root\n      fileTypes: config.exts\n\n    # Remember which buckets we are using.\n    project.buckets = config.buckets\n    config.buckets.forEach (bucket) ->\n      bucket.projects[root] = project\n\n    # Populate the bundler with files.\n    crawlProject project\n\n    # Setup the bundle readers.\n    bundleNames = Object.keys config.bundles\n    bundles = bundleNames.map (bundleName) ->\n      opts = config.bundles[bundleName]\n      opts.onStop ?= noop\n\n      bundleName = globRegex bundleName\n      bundleMain = steal opts, 'main'\n\n      return (req, res) ->\n        unless match = bundleName.exec req.file\n          return false\n\n        project.bundle\n          dev: /^(1||true)$/.test req.query.dev\n          main: fillRefs bundleMain, match\n          platform: req.query.platform or 'web'\n\n        .then (bundle) ->\n          started = Date.now()\n          cached = bundle.isCached\n\n          code = await bundle.read opts\n          if bundle.error\n            res.status 400\n            res.send bundle.error\n            return true\n\n          if code and !cached\n            elapsed = huey.cyan getElapsed started\n            mainPath = huey.pale_green '~/' + bundle._main.name\n            log \"ðŸ“¦ Bundled #{mainPath} in #{elapsed}\"\n          return code\n\n    project.read = (req, res) ->\n      try for read in bundles\n        val = await read req, res\n        return val if val isnt false\n      catch err\n        if err.code is 'NO_MAIN_MODULE'\n          res.status 400\n          res.send\n            error: err.message\n            code: err.code\n          return true\n        throw err\n\n    @projects[root] = project\n    return project\n\n  # TODO: Properly unload the compiler for each bundle.\n  remove: (root) ->\n    if @projects.hasOwnProperty root\n      if log.verbose\n        log.pale_pink 'Unloading project:', root\n\n      # Remove unused buckets.\n      {buckets} = @projects[root]\n      buckets?.forEach (bucket) =>\n        if bucket.drop root\n          delete @buckets[bucket.name]\n\n      # Remove the project.\n      delete @projects[root]\n\nmodule.exports = new App\n\n# app -> Project -> app\nProject = require './Project'\n\n# Replaces '$1' with `arr[1]` etc.\nfillRefs = (str, arr) ->\n  if str\n  then str.replace /\\$[0-9]+/g, (str) -> arr[str.slice 1]\n  else ''\n\ngetElapsed = (started) ->\n  elapsed = Date.now() - started\n  if elapsed < 1000 then elapsed + 'ms'\n  else (elapsed / 1000).toFixed(3) + 's'\n\n# TODO: Use watchman for crawling.\ncrawlProject = (project) ->\n  started = Date.now()\n  project.crawl()\n  elapsed = huey.cyan getElapsed started\n  name = huey.pale_green project.root.name\n  log \"âœ¨ Crawled #{name} in #{elapsed}\"\n  return\n\nonError = (err) ->\n  if process.env.VERBOSE\n  then log err.stack\n  else log.red err.name + ':', err.message\n"
  ]
}